{"version":3,"sources":["redux/actions.js","redux/selectors.js","Components/Form/Form.js","Components/ContactList/Contact.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js","Components/Form/Form.module.css","Components/ContactList/ContactList.module.css"],"names":["actions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","includes","Form","useState","setName","setNumber","dispatch","useDispatch","useSelector","inputChange","e","currentTarget","value","onSubmit","preventDefault","map","contact","alert","className","styles","input","type","onChange","pattern","title","required","btn","Contact","filteredContacts","listItem","contactsBtn","onClick","onDeleteContact","ContactsList","list","Filter","placeholder","target","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.87798f43.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('phonebook/addContact', (name, number) => ({\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n  }));\r\n  \r\n  const deleteContact = createAction('phonebook/deleteContact');\r\n  \r\n  const changeFilter = createAction('phonebook/changeFilter');\r\n  \r\n  const actions = { addContact, deleteContact, changeFilter };\r\n  \r\n  export default actions;","export const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import { useState } from 'react';\nimport {useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getContacts } from '../../redux/selectors';\n\nimport styles from './Form.module.css';\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n \n  \n\n  const inputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    \n    if (!name || !number) return;\n\n    const contactName = contacts.map(contact => contact.name.toLowerCase());\n    if (contactName.includes(name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(actions.addContact(name, number));\n\n    setName('');\n    setNumber('');  \n\n  };\n\n  return (\n    <form onSubmit={formSubmit}>\n      <label className={styles.name}>\n        Name:\n        <input\n          className={styles.input}\n          type=\"text\"\n          onChange={inputChange}\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.name}>\n        Number:\n        <input\n          className={styles.input}\n          type=\"tel\"\n          value={number}\n          onChange={inputChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\r\nimport actions from '../../redux/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\nimport { getFilteredContacts } from '../../redux/selectors';\r\n\r\nconst Contact = () => {\r\n    \r\n    const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n    const filteredContacts = useSelector(getFilteredContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    return filteredContacts.map(({ id, name, number }) => {\r\n      return (\r\n        <li key={id} className={styles.listItem}>\r\n          {name}: {number}\r\n          <button className={styles.contactsBtn} onClick={() => onDeleteContact(id)} type=\"button\">\r\n            Delete\r\n          </button>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\nexport default Contact;","\nimport React from 'react';\n\nimport Contact from './Contact';\n\nimport styles from './ContactList.module.css';\n\nconst ContactsList = () => (\n  <ul className={styles.list}>\n    <Contact />\n  </ul>\n);\n\n\n\nexport default ContactsList;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport actions from '../../redux/actions';\n\nimport styles from '../Form/Form.module.css';\n\nconst Filter = () => {\n\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  \n  return (\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      placeholder=\"Filter\"\n      onChange={e => dispatch(actions.changeFilter(e.target.value))}\n    />\n  );\n};\n\n\n\nexport default Filter;\n","import ContactForm from './Components/Form/Form';\nimport ContactsList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nimport './App.css';\n\nexport default function App() {\n  \n  return (\n    <div className=\"Container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm/>\n      <h2 className=\"title\">Contacts</h2>\n      <Filter/>\n      <ContactsList/>\n    </div>\n  );\n};\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\n\r\n  \r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [ ...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions:  [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n  \r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate  persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Form_name__3XxJU\",\"input\":\"Form_input__IuSOh\",\"btn\":\"Form_btn__36OJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2AoBe\",\"listItem\":\"ContactList_listItem__Plnll\",\"contactsBtn\":\"ContactList_contactsBtn__3jpNa\"};"],"sourceRoot":""}